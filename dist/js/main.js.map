{"version":3,"sources":["webpack:///webpack/bootstrap c2e9724ab3758f4d05e1","webpack:///./src/Position.js","webpack:///./src/constants.js","webpack:///./src/GameState.js","webpack:///./src/Tile.js","webpack:///./src/main.js"],"names":["Position","row","column","_row","_column","NEW_TILE_VALUE","Direction","LEFT","Symbol","RIGHT","UP_LEFT","UP_RIGHT","DOWN_LEFT","DOWN_RIGHT","MAIN_DIAGONAL","ANTI_DIAGONAL","GameState","_deleteTiles","grid","started","movedThisTurn","i","position","_randomPosition","getTile","setTile","document","querySelector","style","opacity","display","direction","_shiftLeft","_shiftRight","_shiftDownRight","_shiftUpLeft","_shiftDownLeft","_shiftUpRight","console","error","_generateRandomTiles","_countEmpty","_checkGameOver","_deleteMergedFlag","tile","length","j","endPosition","value","justMerged","moveToPosition","merge","compare","__shiftDiagonalDown","__shiftDiagonalUp","endPositionIndex","empty","gameOver","generatedAmount","Math","floor","random","forEach","filter","overlay","tiles","querySelectorAll","removeChild","count","canMove","lastValue","Tile","element","_renderTile","useCurrent","gridElement","gridRect","getBoundingClientRect","top","left","other","classList","remove","add","innerHTML","fontSize","createElement","appendChild","createTextNode","game","addEventListener","e","preventDefault","newGame","onkeypress","code","handleMove"],"mappings":"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","file":"main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmony imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 4);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap c2e9724ab3758f4d05e1","/**\n * Created by Ondřej Kratochvíl on 10.6.17.\n */\nexport default class Position {\n\n    constructor(row, column) {\n        this._row = row;\n        this._column = column;\n    }\n\n    get row() {\n        return this._row;\n    }\n\n    set row(row) {\n        this._row = row;\n    }\n\n    get column() {\n        return this._column;\n    }\n\n    set column(column) {\n        this._column = column\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/Position.js","import Position from \"./Position\";\nexport const NEW_TILE_VALUE = 2;\nexport const Direction = {\n    LEFT: Symbol('LEFT'),\n    RIGHT: Symbol('RIGHT'),\n    UP_LEFT: Symbol('UP_LEFT'),\n    UP_RIGHT: Symbol('UP_RIGHT'),\n    DOWN_LEFT: Symbol('DOWN_LEFT'),\n    DOWN_RIGHT: Symbol('DOWN_RIGHT'),\n};\nexport const MAIN_DIAGONAL = [\n    [new Position(0, 1), new Position(1, 2), new Position(2, 3)],\n    [new Position(0, 0), new Position(1, 1), new Position(2, 2), new Position(3, 2)],\n    [new Position(1, 0), new Position(2, 1), new Position(3, 1), new Position(4, 1)],\n    [new Position(2, 0), new Position(3, 0), new Position(4, 0)]\n];\nexport const ANTI_DIAGONAL = [\n    [new Position(0, 0), new Position(1, 0), new Position(2, 0)],\n    [new Position(0, 1), new Position(1, 1), new Position(2, 1), new Position(3, 0)],\n    [new Position(1, 2), new Position(2, 2), new Position(3, 1), new Position(4, 0)],\n    [new Position(2, 3), new Position(3, 2), new Position(4, 1)]\n];\n\n\n// WEBPACK FOOTER //\n// ./src/constants.js","/**\n * Created by Ondřej Kratochvíl on 10.6.17.\n */\nimport Position from './Position';\nimport Tile from \"./Tile\";\nimport {NEW_TILE_VALUE, MAIN_DIAGONAL, ANTI_DIAGONAL, Direction} from './constants';\n\nexport default class GameState {\n\n    constructor() {\n        this._deleteTiles();\n        this.grid = null;\n        this.started = false;\n        this.movedThisTurn = false;\n    }\n\n    newGame() {\n        this._deleteTiles();\n        for (let i = 0; i < 2; ++i) {\n            let position = GameState._randomPosition();\n            while (!!this.getTile(position)) {    // if a tile was already generated on the position\n                position = GameState._randomPosition();\n            }\n            this.setTile(position, new Tile(NEW_TILE_VALUE, position));\n        }\n        document.querySelector('.tile-overlay').style.opacity = 1;\n        this.movedThisTurn = false;\n        this.started = true;\n    }\n\n    gameOver() {\n        document.querySelector('.tile-overlay').style.opacity = 0.1;\n        document.querySelector('#game-over-overlay').style.display = 'block';\n        this.started = false;\n    }\n\n    handleMove(direction) {\n        switch (direction) {\n            case Direction.LEFT:\n                this._shiftLeft();\n                break;\n            case Direction.RIGHT:\n                this._shiftRight();\n                break;\n            case Direction.DOWN_RIGHT:\n                this._shiftDownRight();\n                break;\n            case Direction.UP_LEFT:\n                this._shiftUpLeft();\n                break;\n            case Direction.DOWN_LEFT:\n                this._shiftDownLeft();\n                break;\n            case Direction.UP_RIGHT:\n                this._shiftUpRight();\n                break;\n            default:\n                console.error(`Invalid direction: ${direction}`);\n                break;\n        }\n        if (this.movedThisTurn) {\n            this._generateRandomTiles();\n            this.movedThisTurn = false;\n            if (this._countEmpty() === 0) {\n                this._checkGameOver();\n            }\n        }\n        this._deleteMergedFlag();\n    }\n\n    getTile(position) {\n        return this.grid[position.row][position.column];\n    }\n\n    setTile(position, tile) {\n        this.grid[position.row][position.column] = tile;\n    }\n\n    _shiftLeft() {\n        for (let i = 0; i < this.grid.length; ++i) {\n            const row = this.grid[i];\n            for (let j = 1; j < row.length; ++j) {\n                const tile = row[j];\n                if (!!tile) { // if there is a tile\n                    const tile = row[j];\n                    let endPosition = j;\n                    // move until next tile is encountered, up to start\n                    while (endPosition - 1 >= 0 && !row[endPosition - 1]) {\n                        --endPosition;\n                    }\n                    if (endPosition > 0 && !!row[endPosition - 1]\n                        && row[endPosition - 1].value === tile.value && !row[endPosition - 1].justMerged) { // check for mergeable tile\n                        tile.moveToPosition(false, i, endPosition - 1);\n                        row[endPosition - 1].merge(tile);\n                        row[j] = null;\n                        this.movedThisTurn = true;\n                        continue;\n                    } else if (tile.compare(new Position(i, endPosition))) {\n                        // while was not called, thus tile should not be shifted\n                        continue;\n                    }\n                    row[endPosition] = tile;\n                    row[j] = null;\n                    tile.moveToPosition(false, i, endPosition);\n                    this.movedThisTurn = true;\n                }\n            }\n        }\n    }\n\n    _shiftRight() {\n        for (let i = 0; i < this.grid.length; ++i) {\n            const row = this.grid[i];\n            for (let j = row.length - 2; j >= 0; --j) {\n                const tile = row[j];\n                if (!!tile) { // if there is a tile\n                    let endPosition = j;\n                    // move until next tile is encountered, up to end\n                    while (endPosition + 1 < row.length && !row[endPosition + 1]) {\n                        ++endPosition;\n                    }\n                    if (endPosition < row.length - 1 && !!row[endPosition + 1]\n                        && row[endPosition + 1].value === tile.value && !row[endPosition + 1].justMerged) {\n                        tile.moveToPosition(false, i, endPosition + 1);\n                        row[endPosition + 1].merge(tile);\n                        row[j] = null;\n                        this.movedThisTurn = true;\n                        continue;\n                    } else if (tile.compare(new Position(i, endPosition))) {\n                        // while was not called, thus tile should not be shifted\n                        continue;\n                    }\n                    row[endPosition] = tile;\n                    row[j] = null;\n                    tile.moveToPosition(false, i, endPosition);\n                    this.movedThisTurn = true;\n                }\n            }\n        }\n    }\n\n    _shiftDownRight() {\n        for (let i = 0; i < MAIN_DIAGONAL.length; ++i) {\n            const row = MAIN_DIAGONAL[i];\n            this.__shiftDiagonalDown(i, row);\n        }\n    }\n\n    _shiftUpLeft() {\n        for (let i = 0; i < MAIN_DIAGONAL.length; ++i) {\n            const row = MAIN_DIAGONAL[i];\n            this.__shiftDiagonalUp(i, row);\n        }\n    }\n\n    _shiftDownLeft() {\n        for (let i = 0; i < ANTI_DIAGONAL.length; ++i) {\n            const row = ANTI_DIAGONAL[i];\n            this.__shiftDiagonalDown(i, row);\n        }\n    }\n\n    _shiftUpRight() {\n        for (let i = 0; i < ANTI_DIAGONAL.length; ++i) {\n            const row = ANTI_DIAGONAL[i];\n            this.__shiftDiagonalUp(i, row);\n        }\n    }\n\n    __shiftDiagonalUp(i, row) {\n        for (let j = 1; j < row.length; ++j) {\n            const position = row[j];\n            const tile = this.grid[position.row][position.column];\n            if (!!tile) {\n                let endPositionIndex = j;\n                while (endPositionIndex - 1 >= 0\n                && !this.grid[row[endPositionIndex - 1].row][row[endPositionIndex - 1].column]) {\n                    --endPositionIndex;\n                }\n                if (endPositionIndex > 0\n                    && !!this.grid[row[endPositionIndex - 1].row][row[endPositionIndex - 1].column]\n                    && this.grid[row[endPositionIndex - 1].row][row[endPositionIndex - 1].column].value === tile.value\n                    && !this.grid[row[endPositionIndex - 1].row][row[endPositionIndex - 1].column].justMerged) {\n                    const endPosition = row[endPositionIndex - 1];\n                    tile.moveToPosition(false, endPosition.row, endPosition.column);\n                    this.grid[endPosition.row][endPosition.column].merge(tile);\n                    this.grid[position.row][position.column] = null;\n                    this.movedThisTurn = true;\n                    continue;\n                } else if (tile.compare(row[endPositionIndex])) {\n                    continue;\n                }\n                const endPosition = row[endPositionIndex];\n                this.grid[endPosition.row][endPosition.column] = tile;\n                this.grid[position.row][position.column] = null;\n                tile.moveToPosition(false, endPosition.row, endPosition.column);\n                this.movedThisTurn = true;\n            }\n        }\n    }\n\n    __shiftDiagonalDown(i, row) {\n        for (let j = row.length - 2; j >= 0; --j) {\n            const position = row[j];\n            const tile = this.grid[position.row][position.column];\n            if (!!tile) {\n                let endPositionIndex = j;\n                // move on diagonal if there is no tile, up to end\n                while (endPositionIndex + 1 < row.length\n                && !this.grid[row[endPositionIndex + 1].row][row[endPositionIndex + 1].column]) {\n                    ++endPositionIndex;\n                }\n                if (endPositionIndex < row.length - 1\n                    && !!this.grid[row[endPositionIndex + 1].row][row[endPositionIndex + 1].column]\n                    && this.grid[row[endPositionIndex + 1].row][row[endPositionIndex + 1].column].value === tile.value\n                    && !this.grid[row[endPositionIndex + 1].row][row[endPositionIndex + 1].column].justMerged) {\n                    const endPosition = row[endPositionIndex + 1];\n                    tile.moveToPosition(false, endPosition.row, endPosition.column);\n                    this.grid[endPosition.row][endPosition.column].merge(tile);\n                    this.grid[position.row][position.column] = null;\n                    this.movedThisTurn = true;\n                    continue;\n                } else if (tile.compare(row[endPositionIndex])) {\n                    // while was not called, thus tile should not be shifted\n                    continue;\n                }\n                const endPosition = row[endPositionIndex];\n                this.grid[endPosition.row][endPosition.column] = tile;\n                this.grid[position.row][position.column] = null;\n                tile.moveToPosition(false, endPosition.row, endPosition.column);\n                this.movedThisTurn = true;\n            }\n        }\n    }\n\n    _generateRandomTiles() {\n        const empty = this._countEmpty();\n        if (empty === 0) {\n            this.gameOver();\n            return;\n        }\n        const generatedAmount = empty > 3 ? (Math.floor(Math.random() * 2) + 1) : 1;\n        for (let i = 0; i < generatedAmount; ++i) {\n            let position = GameState._randomPosition();\n            while (!!this.grid[position.row][position.column]) {\n                position = GameState._randomPosition();\n            }\n            // generate tile 4 with 25% probability\n            const tile = new Tile(Math.random() * 100 > 75 ? 4 : 2, position);\n            this.setTile(position, tile);\n        }\n    }\n\n    _deleteMergedFlag() {\n        this.grid.forEach(row => {\n            row\n                .filter(row => !!row)\n                .forEach(tile => {\n                tile.justMerged = false;\n            });\n        });\n    }\n\n    _deleteTiles() {\n        this.grid = [\n            [null, null],\n            [null, null, null],\n            [null, null, null, null],\n            [null, null, null],\n            [null, null]\n        ];\n        const overlay = document.querySelector('.tile-overlay');\n        const tiles = document.querySelectorAll('.tile');\n        if (!!tiles) {\n            tiles.forEach(tile => overlay.removeChild(tile));\n        }\n    }\n\n    _countEmpty() {\n        let count = 0;\n        this.grid.forEach(row => {\n            row\n                .filter(row => !row)\n                .forEach(tile => {\n                    ++count;\n                });\n        });\n        return count;\n    }\n\n    _checkGameOver() {\n        let canMove = false;\n        this.grid.forEach(row => {\n            let lastValue = -1;\n            for (let i = 0; i < row.length; ++i) {\n                if (!row[i] || row[i].value === lastValue) {    // check if right/left movement is possible\n                    canMove = true;\n                    return;\n                }\n                lastValue = row[i].value;\n            }\n        });\n        MAIN_DIAGONAL.forEach(row => {\n            let lastValue = -1;\n            for (let i = 0; i < row.length; ++i) {\n                const tile = this.grid[row[i].row][row[i].column];\n                if (!tile || tile.value === lastValue) {    // check if main diagonal movement is possible\n                    canMove = true;\n                    return;\n                }\n                lastValue = tile.value;\n            }\n        });\n        ANTI_DIAGONAL.forEach(row => {\n            let lastValue = -1;\n            for (let i = 0; i < row.length; ++i) {\n                const tile = this.grid[row[i].row][row[i].column];\n                if (!tile || tile.value === lastValue) {    // check if anti diagonal movement is possible\n                    canMove = true;\n                    return;\n                }\n                lastValue = tile.value;\n            }\n        });\n        if (!canMove) {\n            this.gameOver();\n        }\n    }\n\n    static _randomPosition() {\n        const row = Math.floor(Math.random() * 5);    // random <0; 4>\n        let column;\n        switch (row) {\n            case 0:\n            case 4:\n                column = Math.floor(Math.random() * 2);\n                break;\n            case 1:\n            case 3:\n                column = Math.floor(Math.random() * 3);\n                break;\n            case 2:\n                column = Math.floor(Math.random() * 4);\n                break;\n            default:\n                console.error(`Invalid row index: ${row}`);\n                return null;\n        }\n        return new Position(row, column);\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/GameState.js","/**\n * Created by Ondřej Kratochvíl on 10.6.17.\n */\nimport Position from './Position';\n\nexport default class Tile {\n\n    constructor(value, position) {\n        this.value = value;\n        this.position = position;\n        this.element = null;\n        this.justMerged = false;\n        this._renderTile();\n    }\n\n    moveToPosition(useCurrent, row, column) {\n        if (!useCurrent) {\n            this.position.row = row;\n            this.position.column = column;\n        }\n        const gridElement = document.querySelectorAll(`#grid-row-${this.position.row} > div`)[this.position.column];\n        const gridRect = gridElement.getBoundingClientRect();\n        this.element.style.top = `${gridRect.top}px`;\n        this.element.style.left = `${gridRect.left}px`;\n    }\n\n    merge(other) {\n        this.element.classList.remove(`tile-${this.value}`);\n        this.value *= 2;\n        this.element.classList.add(`tile-${this.value}`);\n        this.element.innerHTML = this.value;\n        this.justMerged = true;\n        // delete the other tile that was merged into this one\n        const overlay = document.querySelector('.tile-overlay');\n        overlay.removeChild(other.element);\n        if (this.value > 65536) {\n            this.element.style.fontSize = '30px';\n        } else if (this.value > 8192) {\n            this.element.style.fontSize = '35px';\n        }\n    }\n\n    compare(position) {\n        return this.position.row === position.row && this.position.column === position.column;\n    }\n\n    _renderTile() {\n        this.element = document.createElement('div');\n        this.element.appendChild(document.createTextNode(this.value));\n        this.element.classList.add('tile', `tile-${this.value}`);\n        document.querySelector('.tile-overlay').appendChild(this.element);\n        this.moveToPosition(true);\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/Tile.js","import GameState from './GameState';\nimport {Direction} from \"./constants\";\n\nconst game = new GameState();\n\n// start game handler\ndocument.querySelector('#newgame').addEventListener('click', (e) => {\n    e.preventDefault();\n    document.querySelector('#game-over-overlay').style.display = 'none';\n    game.newGame();\n});\n\n// movement handler\ndocument.onkeypress = (e) => {\n    if (!game.started) {\n        return;\n    }\n    switch (e.code) {\n        case 'Numpad1':\n            game.handleMove(Direction.DOWN_LEFT);\n            break;\n        case 'Numpad3':\n            game.handleMove(Direction.DOWN_RIGHT);\n            break;\n        case 'Numpad4':\n            game.handleMove(Direction.LEFT);\n            break;\n        case 'Numpad6':\n            game.handleMove(Direction.RIGHT);\n            break;\n        case 'Numpad7':\n            game.handleMove(Direction.UP_LEFT);\n            break;\n        case 'Numpad9':\n            game.handleMove(Direction.UP_RIGHT);\n            break;\n    }\n};\n\n\n// WEBPACK FOOTER //\n// ./src/main.js"],"sourceRoot":""}